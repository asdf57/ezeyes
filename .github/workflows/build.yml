name: Build and Release EZEyes
on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: ${{ matrix.os }} Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21.x'
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-app
          path: out/make/**

      - name: Get Release by Tag
        id: get_release
        uses: actions/github-script@0.9.0
        with:
            github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
            script: |
              const tag = context.ref.replace('refs/tags/', '');
              const release = await github.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: tag
              });
              if (!release || !release.data.upload_url) {
                throw new Error("Release not found or upload_url missing");
              }
              core.setOutput('upload_url', release.data.upload_url);

      - name: Build
        run: |
          if [[ ${{ matrix.os }} == 'ubuntu-latest' ]]; then
            yarn make --platform=linux --arch=x64
          elif [[ ${{ matrix.os }} == 'windows-latest' ]]; then
            yarn make --platform=win32 --arch=x64
          elif [[ ${{ matrix.os }} == 'macos-latest' ]]; then
            yarn make --platform=darwin --arch=universal
          fi

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
            files: './out/make/zip/**/*.zip'