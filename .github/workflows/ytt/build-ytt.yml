#@ load("@ytt:data", "data")

#@ def generate_build_cmds(deployment):
#@     result = ""
#@     for arch in deployment.arch:
#@         result += "yarn build --os=" + deployment.os + " --arch=" + arch + "\n"
#@     end
#@     return result
#@ end

name: "Build and Release EZEyes"
"on":
  push:
    tags:
      - '*'

jobs:
  build:
    name: "Build Application"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2

      - name: "Set up Node.js"
        uses: actions/setup-node@v2
        with:
          node-version: '21.x'
          cache: "yarn"

      - name: "Install Dependencies"
        run: "yarn install"

      - name: "Build and Package Application"
        run: "yarn make"

      - name: "Get Release by Tag"
        id: get_release
        uses: actions/github-script@0.9.0
        with:
            github-token: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
            script: |
              const tag = context.ref.replace('refs/tags/', '');
              const release = await github.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: tag
              });
              if (!release || !release.data.upload_url) {
                throw new Error("Release not found or upload_url missing");
              }
              core.setOutput('upload_url', release.data.upload_url);

      #@ for deployment in data.values.deployments:
      - name: #@ "Build for " + deployment.os
        run: #@ generate_build_cmds(deployment)
      #@ end

      - name: "Upload Release Assets"
        uses: softprops/action-gh-release@v1
        env:
            GITHUB_TOKEN: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
        with:
            files: './out/make/zip/**/*.zip'
